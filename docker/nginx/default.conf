server {
    # Указывает Nginx прослушивать входящие соединения на порту 80, стандартном порту для HTTP.
    listen 80;
    # Определяет имя сервера, которое будет обрабатывать этот блок.
    # Здесь 'localhost' указывает, что сервер будет доступен локально.
    server_name localhost;

    # Задает корневую директорию для файлов сайта.
    # Все запросы будут искать файлы относительно этой директории.
    root /var/www/html/web;

    # Указывает файлы, которые будут служить страницами по умолчанию при доступе к каталогу.
    index index.php index.html;

    # Конфигурация для обработки запросов к корневому URI.
    location / {
        # Пытается сначала отдать файл, соответствующий запросу, затем каталог, и если это не удаётся,
        # перенаправляет запрос на index.php с сохранением всех параметров запроса.
        try_files $uri $uri/ /index.php?$args;
    }

    # Обрабатывает запросы к файлам, пути которых заканчиваются на .php.
    location ~ \.php$ {
        # Передает обработку запроса к FastCGI серверу,
        # запущенному на указанном адресе и порту (используется имя сервиса 'app' из docker-compose и порт 9000).
        fastcgi_pass php:9000;

        # Указывает nginx использовать файл index.php в качестве индекса для FastCGI запросов.
        fastcgi_index index.php;

        # Включает параметры из файла fastcgi_params, который содержит стандартные параметры FastCGI.
        include fastcgi_params;

        # Определяет путь к исполняемому файлу скрипта, который будет передан в FastCGI сервер.
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Передает дополнительную информацию о пути в FastCGI сервер.
        fastcgi_param PATH_INFO $fastcgi_path_info;

        # Можно использовать для разделения пути на SCRIPT_FILENAME и PATH_INFO, но здесь это закомментировано.
        # fastcgi_split_path_info ^(.+\.php)(/.+)$;
    }

    # Запрещает доступ ко всем файлам, начинающимся на ".ht", например .htaccess.
    location ~/\.ht {
        # Отказывает в доступе всем.
        deny all;
    }

}
